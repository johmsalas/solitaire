diff --git a/node_modules/recoil/dist/index.js b/node_modules/recoil/dist/index.js
index 7551ad8..b30ed28 100644
--- a/node_modules/recoil/dist/index.js
+++ b/node_modules/recoil/dist/index.js
@@ -11,8 +11,4 @@
 
 'use strict';
 
-if (process.env.NODE_ENV === 'production') { // @oss-only
-  module.exports = require('./recoil.production.js'); // @oss-only
-} else { // @oss-only
-  module.exports = require('./recoil.development.js'); // @oss-only
-} // @oss-only
+module.exports = require('./recoil.development.js'); // @oss-only
diff --git a/node_modules/recoil/dist/recoil.development.js b/node_modules/recoil/dist/recoil.development.js
index d1e2ab1..468cad1 100644
--- a/node_modules/recoil/dist/recoil.development.js
+++ b/node_modules/recoil/dist/recoil.development.js
@@ -5,7 +5,6 @@ Object.defineProperty(exports, '__esModule', { value: true });
 function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }
 
 var react = _interopDefault(require('react'));
-var reactDom = _interopDefault(require('react-dom'));
 
 /**
  * Copyright (c) Facebook, Inc. and its affiliates.
@@ -1630,18 +1629,17 @@ function useRecoilSnapshot() {
 function useGoToSnapshot_DEPRECATED() {
   const storeRef = useStoreRef$1();
   return snapshot => {
-    reactDom.unstable_batchedUpdates(() => {
-      snapshot.updatedAtoms.forEach(key => {
-        setRecoilValue$2(storeRef.current, new AbstractRecoilValue$2(key), snapshot.atomValues.get(key));
-      });
-    });
+    // reactDom.unstable_batchedUpdates(() => {
+    //   snapshot.updatedAtoms.forEach(key => {
+    //     setRecoilValue$2(storeRef.current, new AbstractRecoilValue$2(key), snapshot.atomValues.get(key));
+    //   });
+    // });
   };
 }
 
 function useGotoRecoilSnapshot() {
   const storeRef = useStoreRef$1();
   return useCallback(snapshot => {
-    reactDom.unstable_batchedUpdates(() => {
       storeRef.current.replaceState(prevState => {
         const nextState = snapshot.getStore_INTERNAL().getState().currentTree; // Fire subscriptions for any atoms that changed values
 
@@ -1662,17 +1660,14 @@ function useGotoRecoilSnapshot() {
           nodeToComponentSubscriptions: prevState.nodeToComponentSubscriptions
         };
       });
-    });
   }, [storeRef]);
 }
 
 function useSetUnvalidatedAtomValues() {
   const storeRef = useStoreRef$1();
   return (values, transactionMetadata = {}) => {
-    reactDom.unstable_batchedUpdates(() => {
       storeRef.current.addTransactionMetadata(transactionMetadata);
       values.forEach((value, key) => setUnvalidatedRecoilValue$1(storeRef.current, new AbstractRecoilValue$2(key), value));
-    });
   };
 }
 
@@ -1697,7 +1692,6 @@ function useRecoilCallback(fn, deps) {
     }
 
     let ret = SENTINEL;
-    reactDom.unstable_batchedUpdates(() => {
       // flowlint-next-line unclear-type:off
       ret = fn({
         set,
@@ -1705,7 +1699,6 @@ function useRecoilCallback(fn, deps) {
         snapshot,
         gotoSnapshot
       })(...args);
-    });
     !!(ret instanceof Sentinel) ?  Recoil_invariant(false, 'unstable_batchedUpdates should return immediately')  : void 0;
     return ret;
   }, deps != null ? [...deps, storeRef] : undefined // eslint-disable-line fb-www/react-hooks-deps
